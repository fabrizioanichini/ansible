- name: Debug SSH config for tomatoai
  shell: cat {{ ansible_env.HOME }}/.ssh/config
  register: ssh_config_content

- name: Show SSH config for tomatoai
  debug:
    var: ssh_config_content.stdout_lines

- name: Debug tomatoai SSH key permissions
  shell: ls -l {{ ansible_env.HOME }}/.ssh/tomatoai_rsa
  register: ssh_key_permissions

- name: Show tomatoai SSH key permissions
  debug:
    var: ssh_key_permissions.stdout_lines

- name: Test SSH connection to GitHub for tomatoai
  shell: ssh -T git@github.com-tomatoai
  register: ssh_test
  ignore_errors: yes

- name: Debug SSH test output for tomatoai
  debug:
    var: ssh_test

- name: Ensure tomato directory exists
  file:
    path: "{{ ansible_env.HOME }}/tomato"
    state: directory
    mode: '0755'

- name: Clone tomato-frontend-2.0 repository
  git:
    repo: 'git@github.com-tomatoai:tomatoai-dev/tomato-frontend-2.0.git'
    dest: "{{ ansible_env.HOME }}/tomato/front"
    version: dev
    accept_hostkey: yes
  environment:
    GIT_SSH_COMMAND: "ssh -vvv"
  register: git_clone_result

- name: Debug Git clone result for tomato-frontend
  debug:
    var: git_clone_result

- name: Clone private Gist for .env file
  git:
    repo: 'git@gist.github.com-tomatoai:d72a1ba1da432efcbe5d6bc522a5bbde.git'
    dest: "{{ ansible_env.HOME }}/tomato/front/gist_env"
    version: main
    accept_hostkey: yes
  environment:
    GIT_SSH_COMMAND: "ssh -vvv"
  register: gist_clone_result

- name: Debug Gist clone result
  debug:
    var: gist_clone_result

- name: Copy .env file from cloned Gist
  command: cp gist_env/.env .env
  args:
    chdir: "{{ ansible_env.HOME }}/tomato/front"

- name: Remove Gist directory
  file:
    path: "{{ ansible_env.HOME }}/tomato/front/gist_env"
    state: absent

- name: Run npm install in the front directory
  command: npm install
  args:
    chdir: "{{ ansible_env.HOME }}/tomato/front"
