---
- name: Create temporary directory
  tempfile:
    state: directory
    suffix: neovim
  register: neovim_temp_dir

- name: Download latest Neovim
  get_url:
    url: "https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz"
    dest: "{{ neovim_temp_dir.path }}/nvim.tar.gz"

- name: Extract Neovim archive
  unarchive:
    src: "{{ neovim_temp_dir.path }}/nvim.tar.gz"
    dest: "{{ neovim_temp_dir.path }}"
    remote_src: yes

- name: Install Neovim binary
  become: yes
  command:
    cmd: install "{{ neovim_temp_dir.path }}/nvim-linux64/bin/nvim" /usr/local/bin/nvim
    creates: /usr/local/bin/nvim

- name: Copy Neovim lib directory
  become: yes
  command:
    cmd: cp -R "{{ neovim_temp_dir.path }}/nvim-linux64/lib/." /usr/local/lib/
    creates: /usr/local/lib/nvim

- name: Copy Neovim share directory
  become: yes
  command:
    cmd: cp -R "{{ neovim_temp_dir.path }}/nvim-linux64/share/." /usr/local/share/
    creates: /usr/local/share/nvim

- name: Clean up temporary files
  file:
    path: "{{ neovim_temp_dir.path }}"
    state: absent

- name: Check .local directory ownership and permissions
  stat:
    path: "{{ ansible_env.HOME }}/.local"
  register: local_dir_stat

- name: Ensure .local directory has correct permissions
  become: yes
  file:
    path: "{{ ansible_env.HOME }}/.local"
    state: directory
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: '0700'
  when: local_dir_stat.stat.exists and (local_dir_stat.stat.pw_name != ansible_env.USER or local_dir_stat.stat.mode != '0700')

- name: Ensure .local/state directory exists with correct permissions
  file:
    path: "{{ ansible_env.HOME }}/.local/state"
    state: directory
    mode: '0700'

- name: Ensure correct permissions for Neovim directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0700'
    recurse: yes
  loop:
    - "{{ ansible_env.HOME }}/.local/share/nvim"
    - "{{ ansible_env.HOME }}/.local/state/nvim"
    - "{{ ansible_env.HOME }}/.cache/nvim"

- name: Check if Neovim config directory exists
  stat:
    path: "{{ ansible_env.HOME }}/.config/nvim"
  register: nvim_config_dir

- name: Clone LazyVim starter configuration
  git:
    repo: "https://github.com/LazyVim/starter"
    dest: "{{ ansible_env.HOME }}/.config/nvim"
  when: not nvim_config_dir.stat.exists

- name: Disable update notification popup in LazyVim config
  replace:
    path: "{{ ansible_env.HOME }}/.config/nvim/lua/config/lazy.lua"
    regexp: 'checker = { enabled = true }'
    replace: 'checker = { enabled = true, notify = false }'
  when: not nvim_config_dir.stat.exists
